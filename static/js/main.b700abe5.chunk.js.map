{"version":3,"sources":["fbase.js","routes/Profile.js","components/AuthForm.js","components/SocialLogin.js","routes/Auth.js","components/Minit.js","components/MinitFactory.js","routes/Home.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","refreshUser","userObj","history","useHistory","useState","displayName","newDisplayName","setNewDisplayName","onSubmit","e","a","preventDefault","updateProfile","className","type","autoFocus","placeholder","onChange","value","target","style","marginTop","onClick","signOut","push","AuthForm","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","name","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","required","prev","SocialLogin","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faGoogle","faGithub","Auth","faTwitter","color","size","marginBottom","Minit","minitObj","isOwner","editing","setEditing","text","newMinit","setNewMinit","onDeleteClick","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","update","src","alt","class","faTrash","faPencilAlt","MinitFactory","minit","setMinit","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","minits","setMinits","useEffect","onSnapshot","snapshot","minitArray","docs","map","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","Profile","App","init","setInit","setUserObj","onAuthStateChanged","user","photoURL","args","Boolean","currentUser","getFullYear","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b700abe5.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\n  appId: process.env.REACT_APP_APP_ID,\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const firebaseInstance = firebase;\n\nexport const authService = firebase.auth();\nexport const dbService = firebase.firestore();\nexport const storageService = firebase.storage();\n","import { authService } from \"fbase\";\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nexport default ({ refreshUser, userObj }) => {\n  const history = useHistory();\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n\n  const onLogOutClick = () => {\n    authService.signOut();\n    history.push(\"/\");\n  };\n\n  const onChange = (e) => {\n    const {\n      target: { value },\n    } = e;\n    setNewDisplayName(value);\n  };\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    if (userObj.displayName !== newDisplayName) {\n      await userObj.updateProfile({\n        displayName: newDisplayName,\n      });\n      refreshUser();\n      // setNewDisplayName(\"\");\n    }\n  };\n\n  return (\n    <>\n      <div className=\"container\">\n        <form onSubmit={onSubmit} className=\"profileForm\">\n          <input\n            type=\"text\"\n            autoFocus\n            placeholder=\"프로필 이름\"\n            onChange={onChange}\n            value={newDisplayName}\n            className=\"formInput\"\n          />\n          <input\n            type=\"submit\"\n            value=\"프로필 수정\"\n            className=\"formBtn\"\n            style={{\n              marginTop: 10,\n            }}\n          />\n        </form>\n        <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\n          로그아웃\n        </span>\n      </div>\n    </>\n  );\n};\n","import { authService } from \"fbase\";\nimport React, { useState } from \"react\";\n\nconst AuthForm = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [newAccount, setNewAccount] = useState(true);\n  const [error, setError] = useState(\"\");\n\n  const onChange = (e) => {\n    const {\n      target: { name, value },\n    } = e;\n    if (name === \"email\") {\n      setEmail(value);\n    } else if (name === \"password\") {\n      setPassword(value);\n    }\n  };\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      let data;\n      if (newAccount) {\n        // 계정 생성\n        data = await authService.createUserWithEmailAndPassword(\n          email,\n          password\n        );\n      } else {\n        // 로그인\n        data = await authService.signInWithEmailAndPassword(email, password);\n      }\n      console.log(data);\n    } catch (e) {\n      setError(e.message);\n    }\n  };\n\n  const toggleAccount = () => setNewAccount((prev) => !prev);\n\n  return (\n    <>\n      <form onSubmit={onSubmit} className=\"container\">\n        <input\n          type=\"email\"\n          name=\"email\"\n          placeholder=\"Email\"\n          required\n          value={email}\n          onChange={onChange}\n          className=\"authInput\"\n        />\n        <input\n          type=\"password\"\n          name=\"password\"\n          placeholder=\"Password\"\n          required\n          value={password}\n          onChange={onChange}\n          className=\"authInput\"\n        />\n        <input\n          type=\"submit\"\n          className=\"authInput authSubmit\"\n          value={newAccount ? \"계정 생성\" : \"로그인\"}\n        />\n        {error && <span className=\"authError\">{error}</span>}\n      </form>\n      <span onClick={toggleAccount} className=\"authSwitch\">\n        {newAccount ? \"로그인\" : \"계정 생성\"}\n      </span>\n    </>\n  );\n};\nexport default AuthForm;\n","import React from \"react\";\nimport { authService } from \"fbase\";\nimport { firebaseInstance } from \"fbase\";\nimport { faGoogle, faGithub } from \"@fortawesome/free-brands-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nconst SocialLogin = () => {\n  const onSocialClick = async (e) => {\n    const {\n      target: { name },\n    } = e;\n    let provider;\n    if (name === \"google\") {\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\n    } else if (name === \"github\") {\n      provider = new firebaseInstance.auth.GithubAuthProvider();\n    }\n\n    const data = await authService.signInWithPopup(provider);\n    console.log(data);\n  };\n  return (\n    <div className=\"authBtns\">\n      <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\n        Google로 로그인 <FontAwesomeIcon icon={faGoogle} />\n      </button>\n      <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\n        Github로 로그인 <FontAwesomeIcon icon={faGithub} />\n      </button>\n    </div>\n  );\n};\n\nexport default SocialLogin;\n","import React from \"react\";\nimport AuthForm from \"components/AuthForm\";\nimport SocialLogin from \"components/SocialLogin\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\n\nconst Auth = () => {\n  return (\n    <div className=\"authContainer\">\n      <FontAwesomeIcon\n        icon={faTwitter}\n        color={\"#04AAFF\"}\n        size=\"3x\"\n        style={{ marginBottom: 30 }}\n      />\n      <AuthForm />\n      <SocialLogin />\n    </div>\n  );\n};\nexport default Auth;\n","import React, { useState } from \"react\";\nimport { dbService, storageService } from \"fbase\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Minit = ({ minitObj, isOwner }) => {\n  const [editing, setEditing] = useState(false);\n  const [newMinit, setNewMinit] = useState(minitObj.text);\n  const onDeleteClick = async () => {\n    const ok = window.confirm(\"정말로 이 Minit을 삭제하시겠습니까?\");\n    if (ok) {\n      // Minit 삭제\n      // minits collection에 있는 해당 id를 찾아서 삭제한다.\n      await dbService.doc(`minits/${minitObj.id}`).delete();\n      await storageService.refFromURL(minitObj.attachmentUrl).delete();\n    }\n  };\n  const toggleEditing = () => setEditing((prev) => !prev);\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    await dbService.doc(`minits/${minitObj.id}`).update({\n      text: newMinit,\n    });\n    setEditing(false);\n  };\n  const onChange = (e) => {\n    const {\n      target: { value },\n    } = e;\n    setNewMinit(value);\n  };\n  return (\n    <div className=\"minit\">\n      {editing ? (\n        <>\n          {isOwner && (\n            <>\n              <form onSubmit={onSubmit} className=\"container minitEdit\">\n                <input\n                  type=\"text\"\n                  placeholder=\"Minit 수정하기\"\n                  value={newMinit}\n                  required\n                  onChange={onChange}\n                />\n                <input type=\"submit\" value=\"Minit 수정\" className=\"formBtn\" />\n              </form>\n              <button onClick={toggleEditing} className=\"formBtn cancelBtn\">\n                취소\n              </button>\n            </>\n          )}\n        </>\n      ) : (\n        <>\n          <h4>{minitObj.text}</h4>\n          {minitObj.attachmentUrl && (\n            <img src={minitObj.attachmentUrl} alt={minitObj.attachmentUrl} />\n          )}\n          {isOwner && (\n            <div class=\"minit__actions\">\n              <span onClick={onDeleteClick}>\n                <FontAwesomeIcon icon={faTrash} />\n              </span>\n              <span onClick={toggleEditing}>\n                <FontAwesomeIcon icon={faPencilAlt} />\n              </span>\n            </div>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Minit;\n","import { dbService, storageService } from \"fbase\";\nimport React, { useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nconst MinitFactory = ({ userObj }) => {\n  const [minit, setMinit] = useState(\"\");\n  const [attachment, setAttachment] = useState(\"\");\n  const onSubmit = async (e) => {\n    if (minit === \"\") {\n      return;\n    }\n    e.preventDefault();\n    // uuid는 기본적으로 어떤 특별한 식별자를 랜덤으로 생성해준다.\n    let attachmentUrl = \"\";\n    if (attachment !== \"\") {\n      const attachmentRef = storageService\n        .ref()\n        .child(`${userObj.uid}/${uuidv4()}`);\n      const response = await attachmentRef.putString(attachment, \"data_url\");\n      attachmentUrl = await response.ref.getDownloadURL();\n    }\n    const minitObj = {\n      text: minit,\n      createdAt: Date.now(),\n      creatorId: userObj.uid,\n      attachmentUrl,\n    };\n    await dbService.collection(\"minits\").add(minitObj);\n    setMinit(\"\");\n    setAttachment(\"\");\n  };\n\n  const onChange = (e) => {\n    const {\n      target: { value },\n    } = e;\n    setMinit(value);\n  };\n\n  const onFileChange = (e) => {\n    const {\n      target: { files },\n    } = e;\n    const theFile = files[0];\n    const reader = new FileReader();\n    // 파일을 읽고나면 실행된다.\n    reader.onloadend = (finishedEvent) => {\n      const {\n        currentTarget: { result },\n      } = finishedEvent;\n      setAttachment(result);\n    };\n    // 파일 읽기\n    reader.readAsDataURL(theFile);\n  };\n\n  const onClearAttachment = () => {\n    setAttachment(\"\");\n  };\n  return (\n    <form onSubmit={onSubmit} className=\"factoryForm\">\n      <div className=\"factoryInput__container\">\n        <input\n          className=\"factoryInput__input\"\n          value={minit}\n          onChange={onChange}\n          type=\"text\"\n          placeholder=\"무슨 생각을 하고 있나요?\"\n          maxLength={120}\n        />\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\n      </div>\n      <label for=\"attach-file\" className=\"factoryInput__label\">\n        <span>Add photos</span>\n        <FontAwesomeIcon icon={faPlus} />\n      </label>\n      <input\n        id=\"attach-file\"\n        type=\"file\"\n        accept=\"image/*\"\n        onChange={onFileChange}\n        style={{\n          opacity: 0,\n        }}\n      />\n      {attachment && (\n        <div className=\"factoryForm__attachment\">\n          <img\n            src={attachment}\n            alt={attachment}\n            style={{\n              backgroundImage: attachment,\n            }}\n          />\n          <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\n            <span>Remove</span>\n            <FontAwesomeIcon icon={faTimes} />\n          </div>\n        </div>\n      )}\n    </form>\n  );\n};\n\nexport default MinitFactory;\n","import Minit from \"components/Minit\";\nimport { dbService } from \"fbase\";\nimport React, { useEffect, useState } from \"react\";\nimport MinitFactory from \"components/MinitFactory\";\n\nconst Home = ({ userObj }) => {\n  const [minits, setMinits] = useState([]);\n\n  // const getMinits = async () => {\n  //   // get()메서드만 사용하면 querysnapshot을 리턴한다. 다향한 프로퍼티와 메서드를 포함하고 있다.\n  //   const dbMinits = await dbService.collection(\"minits\").get();\n  //   // querysnapshot에서 forEach 메서드를 사용해서 data들을 가져온다\n  //   dbMinits.forEach((document) => {\n  //     const minitObject = {\n  //       ...document.data(),\n  //       id: document.id,\n  //     };\n  //     setMinits((prev) => [minitObject, ...prev]);\n  //   });\n  // };\n\n  useEffect(() => {\n    // getMinits();\n    // 위와 다른 방식인데, dbService.collection에서 받아오는 snapshot을 onSnapshot을 이용해서 받아오고,\n    // snapshot 안에 있는 docs들을 map을 이용해서 가져온다.\n    // snapshot을 이용하는 이유는 CRUD가 일어날때마다 발생하고 realtime을 사용할 수 있음\n    dbService.collection(\"minits\").onSnapshot((snapshot) => {\n      const minitArray = snapshot.docs.map((doc) => ({\n        id: doc.id,\n        ...doc.data(),\n      }));\n      setMinits(minitArray);\n    });\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <MinitFactory userObj={userObj} />\n      <div style={{ marginTop: 30 }}>\n        {minits.map((minit) => (\n          <Minit\n            key={minit.id}\n            minitObj={minit}\n            isOwner={minit.creatorId === userObj.uid}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\nexport default Home;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Navigation = ({ userObj }) => (\n  <nav>\n    <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\n      <li>\n        <Link to=\"/\" style={{ marginRight: 10 }}>\n          <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\n        </Link>\n      </li>\n      <li>\n        <Link\n          to=\"/profile\"\n          style={{\n            marginLeft: 10,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            fontSize: 12,\n          }}\n        >\n          <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\n          <span style={{ marginTop: 10 }}>\n            {userObj.displayName\n              ? `${userObj.displayName}의 Profile`\n              : \"Profile\"}\n          </span>\n        </Link>\n      </li>\n    </ul>\n  </nav>\n);\nexport default Navigation;\n","import React from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Profile from \"routes/Profile\";\nimport Auth from \"../routes/Auth\";\nimport Home from \"../routes/Home\";\nimport Navigation from \"./Navigation\";\n\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\n  return (\n    <Router>\n      {isLoggedIn && <Navigation userObj={userObj} />}\n      <Switch>\n        {isLoggedIn ? (\n          <div\n            style={{\n              maxWidth: 890,\n              width: \"100%\",\n              margin: \"0 auto\",\n              marginTop: 80,\n              display: \"flex\",\n              justifyContent: \"center\",\n            }}\n          >\n            <Route exact path=\"/\">\n              <Home userObj={userObj} />\n            </Route>\n            <Route exact path=\"/profile\">\n              <Profile userObj={userObj} refreshUser={refreshUser} />\n            </Route>\n          </div>\n        ) : (\n          <>\n            <Route exact path=\"/\">\n              <Auth />\n            </Route>\n          </>\n        )}\n      </Switch>\n    </Router>\n  );\n};\n\nexport default AppRouter;\n","import React, { useEffect, useState } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    // 로그인 또는 로그아웃 시 발생 로그인 되어있으면 user를 받아옴\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        if (user.displayName === null) {\n          user.updateProfile({\n            displayName: \"minitter\",\n          });\n        }\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          photoURL: user.photoURL,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      photoURL: user.photoURL,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          isLoggedIn={Boolean(userObj)}\n          userObj={userObj}\n          refreshUser={refreshUser}\n        />\n      ) : (\n        \"초기화중...\"\n      )}\n      <footer className=\"footer\">\n        &copy; {new Date().getFullYear()} Minitter\n      </footer>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"components/App\";\nimport \"styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}